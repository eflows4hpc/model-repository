default:
  image: python:3.9-slim

variables:
  OS_AUTH_TYPE: v3applicationcredential
  OS_AUTH_URL: https://hdf-cloud.fz-juelich.de:5000
  OS_IDENTITY_API_VERSION: 3
  OS_REGION_NAME: "HDFCloud"
  OS_INTERFACE: public
  PRODUCTION_IP: 134.94.199.17
  PRODUCTION_NAME: model_repo
  VOLUME_ID: 615f3f9d-ec7d-4860-8d65-6121ec5e01fc

# before script copied from gitlab docs
.before_script_template: &ssh_setup
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client gcc libxslt-dev libffi-dev libssl-dev build-essential python3-dev -y )'

stages:
  - deploy
  - test-deployment
  - cleanup


full-deploy-production:
  stage: deploy
  environment: Production
  only: 
    - web
  <<: *ssh_setup
  script:
    - echo "Starting the full testing deployment of model repo."
    - pip install python-openstackclient
    - INSTANCE_ID=`openstack server create -f value -c id --prefix IMAGE_ --flavor s2 --image 0cdff7de-8777-492b-8b38-b6a628c266d4 --user-data deployment/cloudinit.yml --security-group ssh --security-group www --security-group https model_repo`
    - echo "Instance $INSTANCE_ID created"
    - while [ "`openstack server show $INSTANCE_ID -c addresses -f value`" = "{}" ]; do sleep 5; done # wait until an address is available to attach the floating ip
    - echo "Attaching $PRODUCTION_IP to $INSTANCE_ID"
    - openstack server add floating ip $INSTANCE_ID $PRODUCTION_IP
    - echo "Attaching $VOLUME_ID to $INSTANCE_ID"
    - openstack server add volume $INSTANCE_ID $VOLUME_ID
    - sleep 20 # apparently it may take some time until the volume is available to the OS

